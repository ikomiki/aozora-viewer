{"version":3,"file":"index-CAN6-LM5.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/hooks/useResizablePanel.ts","../../src/constants/sidebar.ts","../../src/components/Sidebar/Sidebar.tsx","../../src/hooks/useDocumentSettings.ts","../../src/components/SettingSlider/SettingSlider.tsx","../../src/components/SettingsPanel/SettingsPanel.tsx","../../src/hooks/useSidebarState.ts","../../src/components/Layout/Layout.tsx","../../src/lib/encoding/EncodingDetector.ts","../../src/components/DropZone/DropZone.tsx","../../src/components/DocumentRenderer/RubyRenderer.tsx","../../src/components/DocumentRenderer/HeadingRenderer.tsx","../../src/components/DocumentRenderer/ImageRenderer.tsx","../../src/components/DocumentRenderer/CaptionRenderer.tsx","../../src/components/DocumentRenderer/PlainTextRenderer.tsx","../../src/components/DocumentRenderer/IndentedTextRenderer.tsx","../../src/components/DocumentRenderer/LeftIndentedTextRenderer.tsx","../../src/components/DocumentRenderer/RightIndentedTextRenderer.tsx","../../src/components/DocumentRenderer/IndentBlockRenderer.tsx","../../src/components/DocumentRenderer/ElementRenderer.tsx","../../src/components/DocumentRenderer/DocumentRenderer.tsx","../../src/lib/parser/FormattingInstructionParser.ts","../../src/lib/parser/IndentBlockProcessor.ts","../../src/lib/parser/AozoraParser.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { useState, useCallback, useEffect, useRef } from 'react'\nimport type { MouseEvent as ReactMouseEvent } from 'react'\nimport type { UseResizablePanelProps, UseResizablePanelReturn } from '../types/sidebar'\n\nexport const useResizablePanel = ({\n  initialWidth,\n  minWidth,\n  maxWidth,\n  onWidthChange\n}: UseResizablePanelProps): UseResizablePanelReturn => {\n  const [width, setWidth] = useState(initialWidth)\n  const [isResizing, setIsResizing] = useState(false)\n  const startXRef = useRef(0)\n  const startWidthRef = useRef(0)\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (!isResizing) return\n    \n    const deltaX = e.clientX - startXRef.current\n    const newWidth = Math.max(minWidth, Math.min(maxWidth, startWidthRef.current + deltaX))\n    \n    setWidth(newWidth)\n    onWidthChange(newWidth)\n  }, [isResizing, minWidth, maxWidth, onWidthChange])\n\n  const handleMouseUp = useCallback(() => {\n    setIsResizing(false)\n  }, [])\n\n  useEffect(() => {\n    if (isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      \n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n      }\n    }\n  }, [isResizing, handleMouseMove, handleMouseUp])\n\n  const handleMouseDown = useCallback((e: ReactMouseEvent) => {\n    e.preventDefault()\n    setIsResizing(true)\n    startXRef.current = e.clientX\n    startWidthRef.current = width\n  }, [width])\n\n  return {\n    width,\n    isResizing,\n    resizerProps: {\n      onMouseDown: handleMouseDown\n    }\n  }\n}","// サイドバー関連の定数\n\nexport const SIDEBAR_CONSTANTS = {\n  DEFAULT_WIDTH: 280,\n  COLLAPSED_WIDTH: 40,\n  MIN_WIDTH: 200,\n  MAX_WIDTH: 600,\n  \n  // localStorage キー\n  STORAGE_KEYS: {\n    LEFT_OPEN: 'aozora-sidebar-left',\n    RIGHT_OPEN: 'aozora-sidebar-right',\n    LEFT_WIDTH: 'aozora-sidebar-left-width',\n    RIGHT_WIDTH: 'aozora-sidebar-right-width',\n  },\n  \n  // デフォルトのaria-label\n  ARIA_LABELS: {\n    LEFT: 'Table of contents',\n    RIGHT: 'Settings panel'\n  }\n} as const","import { ReactNode } from 'react'\nimport { useResizablePanel } from '../../hooks/useResizablePanel'\nimport type { SidebarSide } from '../../types/sidebar'\nimport { SIDEBAR_CONSTANTS } from '../../constants/sidebar'\nimport styles from './Sidebar.module.css'\n\ninterface SidebarProps {\n  side: SidebarSide;\n  isOpen: boolean;\n  onToggle: () => void;\n  children: ReactNode;\n  ariaLabel?: string;\n  width?: number;\n  onWidthChange?: (width: number) => void;\n  canResize?: boolean;\n}\n\nconst Sidebar = ({ side, isOpen, onToggle, children, ariaLabel, width = SIDEBAR_CONSTANTS.DEFAULT_WIDTH, onWidthChange, canResize = false }: SidebarProps) => {\n  const resizablePanel = useResizablePanel({\n    initialWidth: width,\n    minWidth: SIDEBAR_CONSTANTS.MIN_WIDTH,\n    maxWidth: SIDEBAR_CONSTANTS.MAX_WIDTH,\n    onWidthChange: onWidthChange || (() => {})\n  })\n\n  const sidebarClass = `${styles.sidebar} ${styles[`sidebar-${side}`]} ${\n    isOpen ? styles['sidebar-open'] : styles['sidebar-closed']\n  }`;\n  \n  const defaultAriaLabel = side === 'left' ? SIDEBAR_CONSTANTS.ARIA_LABELS.LEFT : SIDEBAR_CONSTANTS.ARIA_LABELS.RIGHT;\n  \n  // 開いている場合は指定された幅、閉じている場合はcollapsed幅を使用\n  const currentWidth = isOpen ? width : SIDEBAR_CONSTANTS.COLLAPSED_WIDTH;\n  const sidebarStyle = {\n    width: `${currentWidth}px`\n  }\n  \n  return (\n    <aside \n      className={sidebarClass}\n      style={sidebarStyle}\n      role=\"complementary\"\n      aria-label={ariaLabel || defaultAriaLabel}\n      aria-expanded={isOpen}\n    >\n      {/* Toggle button */}\n      <button\n        className={styles['sidebar-toggle']}\n        onClick={onToggle}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault()\n            onToggle()\n          }\n        }}\n        aria-label={`${isOpen ? 'Close' : 'Open'} ${side} sidebar`}\n        type=\"button\"\n      >\n        {side === 'left' ? (isOpen ? '←' : '→') : (isOpen ? '→' : '←')}\n      </button>\n      \n      {/* Resize handle */}\n      {canResize && (\n        <div\n          className={styles['resize-handle']}\n          data-testid=\"resize-handle\"\n          {...resizablePanel.resizerProps}\n        />\n      )}\n      \n      {/* Sidebar content */}\n      <div className={styles['sidebar-content']} aria-hidden={!isOpen}>\n        {children}\n      </div>\n    </aside>\n  );\n};\n\nexport default Sidebar;","import { useState, useCallback, useEffect } from 'react'\n\nexport interface DocumentSettings {\n  fontSize: number\n  lineHeight: number\n  horizontalMargin: number\n  letterSpacing: number\n  paragraphSpacing: number\n}\n\nexport interface UseDocumentSettingsReturn {\n  settings: DocumentSettings\n  updateSetting: (key: keyof DocumentSettings, value: number) => void\n  resetSetting: (key: keyof DocumentSettings) => void\n  resetToDefaults: () => void\n}\n\nconst DEFAULT_SETTINGS: DocumentSettings = {\n  fontSize: 16,\n  lineHeight: 1.6,\n  horizontalMargin: 20,\n  letterSpacing: 0,\n  paragraphSpacing: 16\n}\n\nconst SETTING_CONSTRAINTS = {\n  fontSize: { min: 12, max: 36 },\n  lineHeight: { min: 1.2, max: 2.5 },\n  horizontalMargin: { min: 0, max: 200 },\n  letterSpacing: { min: -0.5, max: 2.0 },\n  paragraphSpacing: { min: 0, max: 50 }\n}\n\nconst STORAGE_KEYS = {\n  fontSize: 'aozora-settings-fontSize',\n  lineHeight: 'aozora-settings-lineHeight',\n  horizontalMargin: 'aozora-settings-horizontalMargin',\n  letterSpacing: 'aozora-settings-letterSpacing',\n  paragraphSpacing: 'aozora-settings-paragraphSpacing'\n}\n\n// 値を範囲内にクランプする\nconst clampValue = (value: number, min: number, max: number): number => {\n  return Math.max(min, Math.min(max, value))\n}\n\n// localStorageから設定を読み込む\nconst loadSettingsFromStorage = (): DocumentSettings => {\n  const settings = { ...DEFAULT_SETTINGS }\n  \n  Object.entries(STORAGE_KEYS).forEach(([key, storageKey]) => {\n    try {\n      const stored = localStorage.getItem(storageKey)\n      if (stored !== null) {\n        const parsedValue = parseFloat(stored)\n        if (!isNaN(parsedValue)) {\n          const constraints = SETTING_CONSTRAINTS[key as keyof DocumentSettings]\n          settings[key as keyof DocumentSettings] = clampValue(\n            parsedValue, \n            constraints.min, \n            constraints.max\n          )\n        }\n      }\n    } catch (error) {\n      console.warn(`Failed to load setting ${key}:`, error)\n    }\n  })\n  \n  return settings\n}\n\n// CSS変数を更新する\nconst updateCSSVariables = (settings: DocumentSettings) => {\n  const root = document.documentElement\n  \n  root.style.setProperty('--document-font-size', `${settings.fontSize}px`)\n  root.style.setProperty('--document-line-height', `${settings.lineHeight}`)\n  root.style.setProperty('--document-horizontal-margin', `${settings.horizontalMargin}px`)\n  root.style.setProperty('--document-letter-spacing', `${settings.letterSpacing}px`)\n  root.style.setProperty('--document-paragraph-spacing', `${settings.paragraphSpacing}px`)\n}\n\n// localStorageに設定を保存する（デバウンス付き）\nconst createDebouncedStorage = () => {\n  const timeouts: Record<string, number> = {}\n  \n  const save = (key: keyof DocumentSettings, value: number) => {\n    const storageKey = STORAGE_KEYS[key]\n    \n    // 既存のタイマーをクリア\n    if (timeouts[key]) {\n      clearTimeout(timeouts[key])\n    }\n    \n    // 500ms後に保存\n    timeouts[key] = window.setTimeout(() => {\n      try {\n        localStorage.setItem(storageKey, String(value))\n      } catch (error) {\n        console.warn(`Failed to save setting ${key}:`, error)\n      }\n      delete timeouts[key]\n    }, 500)\n  }\n  \n  const cleanup = () => {\n    Object.values(timeouts).forEach(clearTimeout)\n    Object.keys(timeouts).forEach(key => delete timeouts[key])\n  }\n  \n  return { save, cleanup }\n}\n\nconst debouncedStorage = createDebouncedStorage()\nconst saveSettingToStorage = debouncedStorage.save\n\nexport const useDocumentSettings = (): UseDocumentSettingsReturn => {\n  const [settings, setSettings] = useState<DocumentSettings>(() => {\n    return loadSettingsFromStorage()\n  })\n\n  // 初期化時にCSS変数を設定\n  useEffect(() => {\n    updateCSSVariables(settings)\n    \n    // クリーンアップ関数でタイマーをクリア\n    return () => {\n      debouncedStorage.cleanup()\n    }\n  }, [])\n\n  const updateSetting = useCallback((key: keyof DocumentSettings, value: number) => {\n    const constraints = SETTING_CONSTRAINTS[key]\n    const clampedValue = clampValue(value, constraints.min, constraints.max)\n    \n    setSettings(prev => {\n      const newSettings = {\n        ...prev,\n        [key]: clampedValue\n      }\n      \n      // CSS変数を即座に更新\n      updateCSSVariables(newSettings)\n      \n      return newSettings\n    })\n    \n    // localStorageに保存（デバウンス付き）\n    saveSettingToStorage(key, clampedValue)\n  }, [])\n\n  const resetSetting = useCallback((key: keyof DocumentSettings) => {\n    const defaultValue = DEFAULT_SETTINGS[key]\n    \n    setSettings(prev => {\n      const newSettings = {\n        ...prev,\n        [key]: defaultValue\n      }\n      \n      // CSS変数を更新\n      updateCSSVariables(newSettings)\n      \n      return newSettings\n    })\n    \n    // localStorageから削除\n    try {\n      localStorage.removeItem(STORAGE_KEYS[key])\n    } catch (error) {\n      console.warn(`Failed to remove setting ${key}:`, error)\n    }\n  }, [])\n\n  const resetToDefaults = useCallback(() => {\n    setSettings(DEFAULT_SETTINGS)\n    \n    // CSS変数をリセット\n    updateCSSVariables(DEFAULT_SETTINGS)\n    \n    // localStorageをクリア\n    Object.values(STORAGE_KEYS).forEach(key => {\n      try {\n        localStorage.removeItem(key)\n      } catch (error) {\n        console.warn(`Failed to remove setting ${key}:`, error)\n      }\n    })\n  }, [])\n\n  return {\n    settings,\n    updateSetting,\n    resetSetting,\n    resetToDefaults\n  }\n}","import React, { useCallback } from 'react'\nimport styles from './SettingSlider.module.css'\n\ninterface SettingSliderProps {\n  label: string\n  value: number\n  min: number\n  max: number\n  step: number\n  unit: string\n  onChange: (value: number) => void\n  onReset: () => void\n}\n\nconst SettingSlider = ({\n  label,\n  value,\n  min,\n  max,\n  step,\n  unit,\n  onChange,\n  onReset\n}: SettingSliderProps) => {\n  const handleSliderChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = parseFloat(e.target.value)\n    onChange(newValue)\n  }, [onChange])\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (e.key) {\n      case 'ArrowRight':\n      case 'ArrowUp':\n        e.preventDefault()\n        onChange(Math.min(max, value + step))\n        break\n      case 'ArrowLeft':\n      case 'ArrowDown':\n        e.preventDefault()\n        onChange(Math.max(min, value - step))\n        break\n      case 'Home':\n        e.preventDefault()\n        onChange(min)\n        break\n      case 'End':\n        e.preventDefault()\n        onChange(max)\n        break\n    }\n  }, [value, min, max, step, onChange])\n\n  const formattedValue = unit ? `${value}${unit}` : String(value)\n  const sliderId = `setting-slider-${label.replace(/\\s+/g, '-').toLowerCase()}`\n  const labelId = `${sliderId}-label`\n  const valueId = `${sliderId}-value`\n\n  return (\n    <div className={styles.container}>\n      {/* ラベルと現在値 */}\n      <div className={styles.header}>\n        <label id={labelId} htmlFor={sliderId} className={styles.label}>\n          {label}\n        </label>\n        <span id={valueId} className={styles.value}>\n          {formattedValue}\n        </span>\n      </div>\n\n      {/* スライダーとリセットボタン */}\n      <div className={styles.controls}>\n        <input\n          id={sliderId}\n          type=\"range\"\n          className={styles.slider}\n          value={value}\n          min={min}\n          max={max}\n          step={step}\n          onChange={handleSliderChange}\n          onKeyDown={handleKeyDown}\n          aria-label={label}\n          aria-valuemin={min}\n          aria-valuemax={max}\n          aria-valuenow={value}\n          aria-valuetext={formattedValue}\n          aria-describedby={`${labelId} ${valueId}`}\n        />\n        <button\n          type=\"button\"\n          className={styles.resetButton}\n          onClick={onReset}\n          aria-label={`Reset ${label}`}\n          title={`Reset ${label} to default`}\n        >\n          ↺\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default SettingSlider","import { useCallback } from 'react'\nimport { useDocumentSettings } from '../../hooks/useDocumentSettings'\nimport SettingSlider from '../SettingSlider/SettingSlider'\nimport styles from './SettingsPanel.module.css'\n\nconst SettingsPanel = () => {\n  const { settings, updateSetting, resetSetting, resetToDefaults } = useDocumentSettings()\n\n  const handleFontSizeChange = useCallback((value: number) => {\n    updateSetting('fontSize', value)\n  }, [updateSetting])\n\n  const handleLineHeightChange = useCallback((value: number) => {\n    updateSetting('lineHeight', value)\n  }, [updateSetting])\n\n  const handleHorizontalMarginChange = useCallback((value: number) => {\n    updateSetting('horizontalMargin', value)\n  }, [updateSetting])\n\n  const handleLetterSpacingChange = useCallback((value: number) => {\n    updateSetting('letterSpacing', value)\n  }, [updateSetting])\n\n  const handleParagraphSpacingChange = useCallback((value: number) => {\n    updateSetting('paragraphSpacing', value)\n  }, [updateSetting])\n\n  const handleFontSizeReset = useCallback(() => {\n    resetSetting('fontSize')\n  }, [resetSetting])\n\n  const handleLineHeightReset = useCallback(() => {\n    resetSetting('lineHeight')\n  }, [resetSetting])\n\n  const handleHorizontalMarginReset = useCallback(() => {\n    resetSetting('horizontalMargin')\n  }, [resetSetting])\n\n  const handleLetterSpacingReset = useCallback(() => {\n    resetSetting('letterSpacing')\n  }, [resetSetting])\n\n  const handleParagraphSpacingReset = useCallback(() => {\n    resetSetting('paragraphSpacing')\n  }, [resetSetting])\n\n  return (\n    <div className={styles.container} role=\"region\" aria-label=\"表示設定\">\n      {/* ヘッダー */}\n      <div className={styles.header}>\n        <h3 className={styles.title}>表示設定</h3>\n        <button\n          type=\"button\"\n          className={styles.resetAllButton}\n          onClick={resetToDefaults}\n          aria-label=\"すべてリセット\"\n          title=\"すべての設定をデフォルト値に戻す\"\n        >\n          すべてリセット\n        </button>\n      </div>\n\n      {/* 設定項目 */}\n      <div className={styles.settings}>\n        <SettingSlider\n          label=\"文字サイズ\"\n          value={settings.fontSize}\n          min={12}\n          max={36}\n          step={1}\n          unit=\"px\"\n          onChange={handleFontSizeChange}\n          onReset={handleFontSizeReset}\n        />\n\n        <SettingSlider\n          label=\"行間\"\n          value={settings.lineHeight}\n          min={1.2}\n          max={2.5}\n          step={0.1}\n          unit=\"\"\n          onChange={handleLineHeightChange}\n          onReset={handleLineHeightReset}\n        />\n\n        <SettingSlider\n          label=\"左右マージン\"\n          value={settings.horizontalMargin}\n          min={0}\n          max={200}\n          step={5}\n          unit=\"px\"\n          onChange={handleHorizontalMarginChange}\n          onReset={handleHorizontalMarginReset}\n        />\n\n        <SettingSlider\n          label=\"文字間隔\"\n          value={settings.letterSpacing}\n          min={-0.5}\n          max={2.0}\n          step={0.1}\n          unit=\"px\"\n          onChange={handleLetterSpacingChange}\n          onReset={handleLetterSpacingReset}\n        />\n\n        <SettingSlider\n          label=\"段落間隔\"\n          value={settings.paragraphSpacing}\n          min={0}\n          max={50}\n          step={2}\n          unit=\"px\"\n          onChange={handleParagraphSpacingChange}\n          onReset={handleParagraphSpacingReset}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default SettingsPanel","import { useState, useCallback } from 'react'\nimport type { SidebarState, UseSidebarStateReturn, SidebarSide } from '../types/sidebar'\nimport { SIDEBAR_CONSTANTS } from '../constants/sidebar'\n\nconst DEFAULT_STATE: SidebarState = {\n  left: { isOpen: false, width: SIDEBAR_CONSTANTS.DEFAULT_WIDTH },\n  right: { isOpen: false, width: SIDEBAR_CONSTANTS.DEFAULT_WIDTH }\n}\n\nexport const useSidebarState = (): UseSidebarStateReturn => {\n  const [sidebarState, setSidebarState] = useState<SidebarState>(() => {\n    // localStorage から状態を復元\n    try {\n      const leftOpen = localStorage.getItem(SIDEBAR_CONSTANTS.STORAGE_KEYS.LEFT_OPEN)\n      const rightOpen = localStorage.getItem(SIDEBAR_CONSTANTS.STORAGE_KEYS.RIGHT_OPEN)\n      const leftWidth = localStorage.getItem(SIDEBAR_CONSTANTS.STORAGE_KEYS.LEFT_WIDTH)\n      const rightWidth = localStorage.getItem(SIDEBAR_CONSTANTS.STORAGE_KEYS.RIGHT_WIDTH)\n\n      return {\n        left: {\n          isOpen: leftOpen === 'true',\n          width: leftWidth ? Math.max(SIDEBAR_CONSTANTS.MIN_WIDTH, Math.min(SIDEBAR_CONSTANTS.MAX_WIDTH, parseInt(leftWidth))) : SIDEBAR_CONSTANTS.DEFAULT_WIDTH\n        },\n        right: {\n          isOpen: rightOpen === 'true',\n          width: rightWidth ? Math.max(SIDEBAR_CONSTANTS.MIN_WIDTH, Math.min(SIDEBAR_CONSTANTS.MAX_WIDTH, parseInt(rightWidth))) : SIDEBAR_CONSTANTS.DEFAULT_WIDTH\n        }\n      }\n    } catch {\n      return DEFAULT_STATE\n    }\n  })\n\n  const toggleSidebar = useCallback((side: SidebarSide) => {\n    setSidebarState(prev => {\n      const newState = {\n        ...prev,\n        [side]: {\n          ...prev[side],\n          isOpen: !prev[side].isOpen\n        }\n      }\n      \n      // localStorage に保存\n      const storageKey = side === 'left' ? SIDEBAR_CONSTANTS.STORAGE_KEYS.LEFT_OPEN : SIDEBAR_CONSTANTS.STORAGE_KEYS.RIGHT_OPEN\n      localStorage.setItem(storageKey, String(newState[side].isOpen))\n      \n      return newState\n    })\n  }, [])\n\n  const setSidebarWidth = useCallback((side: SidebarSide, width: number) => {\n    const clampedWidth = Math.max(SIDEBAR_CONSTANTS.MIN_WIDTH, Math.min(SIDEBAR_CONSTANTS.MAX_WIDTH, width))\n    \n    setSidebarState(prev => {\n      const newState = {\n        ...prev,\n        [side]: {\n          ...prev[side],\n          width: clampedWidth\n        }\n      }\n      \n      // localStorage に保存\n      const storageKey = side === 'left' ? SIDEBAR_CONSTANTS.STORAGE_KEYS.LEFT_WIDTH : SIDEBAR_CONSTANTS.STORAGE_KEYS.RIGHT_WIDTH\n      localStorage.setItem(storageKey, String(clampedWidth))\n      \n      return newState\n    })\n  }, [])\n\n  const resetToDefaults = useCallback(() => {\n    setSidebarState(DEFAULT_STATE)\n    localStorage.removeItem(SIDEBAR_CONSTANTS.STORAGE_KEYS.LEFT_OPEN)\n    localStorage.removeItem(SIDEBAR_CONSTANTS.STORAGE_KEYS.RIGHT_OPEN)\n    localStorage.removeItem(SIDEBAR_CONSTANTS.STORAGE_KEYS.LEFT_WIDTH)\n    localStorage.removeItem(SIDEBAR_CONSTANTS.STORAGE_KEYS.RIGHT_WIDTH)\n  }, [])\n\n  return {\n    sidebarState,\n    toggleSidebar,\n    setSidebarWidth,\n    resetToDefaults\n  }\n}","import { ReactNode, useEffect, useState } from 'react'\nimport Sidebar from '../Sidebar/Sidebar'\nimport SettingsPanel from '../SettingsPanel/SettingsPanel'\nimport { useSidebarState } from '../../hooks/useSidebarState'\nimport { SIDEBAR_CONSTANTS } from '../../constants/sidebar'\nimport styles from './Layout.module.css'\n\ninterface LayoutProps {\n  children?: ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps) => {\n  const { sidebarState, toggleSidebar, setSidebarWidth } = useSidebarState();\n  const [isDesktop, setIsDesktop] = useState(true);\n\n  // レスポンシブ状態を監視\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setIsDesktop(window.innerWidth > 768);\n    };\n\n    checkScreenSize(); // 初回実行\n    window.addEventListener('resize', checkScreenSize);\n    \n    return () => {\n      window.removeEventListener('resize', checkScreenSize);\n    };\n  }, []);\n\n  // 動的にマージンを計算（デスクトップのみ）\n  const leftMargin = isDesktop ? \n    (sidebarState.left.isOpen ? sidebarState.left.width : SIDEBAR_CONSTANTS.COLLAPSED_WIDTH) : 0;\n  const rightMargin = isDesktop ? \n    (sidebarState.right.isOpen ? sidebarState.right.width : SIDEBAR_CONSTANTS.COLLAPSED_WIDTH) : 0;\n\n  const mainContentStyle = {\n    marginLeft: `${leftMargin}px`,\n    marginRight: `${rightMargin}px`\n  };\n\n  return (\n    <div className={styles.layout}>\n      {/* Left Sidebar - Table of Contents */}\n      <Sidebar\n        side=\"left\"\n        isOpen={sidebarState.left.isOpen}\n        onToggle={() => toggleSidebar('left')}\n        width={sidebarState.left.width}\n        onWidthChange={(width) => setSidebarWidth('left', width)}\n        canResize={true}\n        ariaLabel=\"Table of contents\"\n      >\n        <div className={styles['sidebar-placeholder']}>\n          <h3>目次</h3>\n          <p>ここに目次が表示されます</p>\n        </div>\n      </Sidebar>\n\n      {/* Main Content */}\n      <main \n        className={styles['main-content']}\n        style={mainContentStyle}\n        role=\"main\"\n        aria-label=\"Main content\"\n      >\n        {children || (\n          <div className={styles['main-placeholder']}>\n            <h1>青空文庫ビューワ</h1>\n            <p>ここにドキュメントが表示されます</p>\n          </div>\n        )}\n      </main>\n\n      {/* Right Sidebar - Settings */}\n      <Sidebar\n        side=\"right\"\n        isOpen={sidebarState.right.isOpen}\n        onToggle={() => toggleSidebar('right')}\n        width={sidebarState.right.width}\n        onWidthChange={(width) => setSidebarWidth('right', width)}\n        canResize={true}\n        ariaLabel=\"Settings panel\"\n      >\n        <SettingsPanel />\n      </Sidebar>\n    </div>\n  );\n};\n\nexport default Layout;","export type SupportedEncoding = 'utf-8' | 'shift-jis'\n\nexport interface EncodingDetectionResult {\n  encoding: SupportedEncoding\n  confidence: number\n  text: string\n  isValid: boolean\n  hasBom: boolean\n}\n\nexport class EncodingDetector {\n  \n  /**\n   * ファイルから文字エンコードを自動検出してテキストを読み込む\n   */\n  static async detectAndDecode(file: File): Promise<EncodingDetectionResult> {\n    const arrayBuffer = await file.arrayBuffer()\n    const uint8Array = new Uint8Array(arrayBuffer)\n    \n    // UTF-8 BOMの検出\n    const hasBom = this.hasUtf8Bom(uint8Array)\n    \n    // UTF-8を最初に試行\n    const utf8Result = this.tryDecodeAsUtf8(uint8Array, hasBom)\n    if (utf8Result.isValid && utf8Result.confidence >= 0.8) {\n      return utf8Result\n    }\n    \n    // UTF-8で失敗した場合、Shift-JISを試行\n    const sjisResult = this.tryDecodeAsShiftJis(uint8Array)\n    if (sjisResult.isValid) {\n      return sjisResult\n    }\n    \n    // 両方とも失敗した場合、UTF-8として強制デコード（最良努力）\n    return {\n      ...utf8Result,\n      confidence: 0.1,\n      isValid: false\n    }\n  }\n  \n  /**\n   * UTF-8 BOMの存在チェック\n   */\n  private static hasUtf8Bom(bytes: Uint8Array): boolean {\n    return bytes.length >= 3 && \n           bytes[0] === 0xEF && \n           bytes[1] === 0xBB && \n           bytes[2] === 0xBF\n  }\n  \n  /**\n   * UTF-8としてデコードを試行\n   */\n  private static tryDecodeAsUtf8(bytes: Uint8Array, hasBom: boolean): EncodingDetectionResult {\n    try {\n      // BOMがある場合は除去\n      const dataBytes = hasBom ? bytes.slice(3) : bytes\n      \n      const decoder = new TextDecoder('utf-8', { fatal: true })\n      const text = decoder.decode(dataBytes)\n      \n      // UTF-8の有効性チェック\n      const confidence = this.calculateUtf8Confidence(text, bytes)\n      \n      return {\n        encoding: 'utf-8',\n        confidence,\n        text,\n        isValid: confidence >= 0.7,\n        hasBom\n      }\n    } catch {\n      // UTF-8デコードに失敗\n      return {\n        encoding: 'utf-8',\n        confidence: 0,\n        text: '',\n        isValid: false,\n        hasBom\n      }\n    }\n  }\n  \n  /**\n   * Shift-JISとしてデコードを試行\n   */\n  private static tryDecodeAsShiftJis(bytes: Uint8Array): EncodingDetectionResult {\n    try {\n      const decoder = new TextDecoder('shift-jis', { fatal: false })\n      const text = decoder.decode(bytes)\n      \n      // Shift-JISの有効性チェック\n      const confidence = this.calculateShiftJisConfidence(text, bytes)\n      \n      return {\n        encoding: 'shift-jis',\n        confidence,\n        text,\n        isValid: confidence >= 0.6,\n        hasBom: false\n      }\n    } catch {\n      // Shift-JISデコードに失敗\n      return {\n        encoding: 'shift-jis',\n        confidence: 0,\n        text: '',\n        isValid: false,\n        hasBom: false\n      }\n    }\n  }\n  \n  /**\n   * UTF-8テキストの信頼度計算\n   */\n  private static calculateUtf8Confidence(text: string, _originalBytes: Uint8Array): number {\n    // 空ファイルは有効なUTF-8\n    if (text.length === 0) {\n      return 0.8\n    }\n    \n    let confidence = 0.5 // ベース信頼度\n    \n    // ASCII文字のみの場合は高い信頼度\n    // eslint-disable-next-line no-control-regex\n    const asciiOnlyText = text.replace(/[^\\u0000-\\u007F]/g, '')\n    if (asciiOnlyText.length === text.length) {\n      confidence = 0.8 // ASCII文字のみは確実にUTF-8\n    }\n    \n    // 日本語文字の存在チェック\n    const japaneseChars = /[\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF]/g\n    const japaneseMatches = text.match(japaneseChars)\n    if (japaneseMatches && japaneseMatches.length > 0) {\n      confidence += 0.3\n    }\n    \n    // 制御文字や無効文字の存在チェック\n    const invalidChars = /[\\uFFFD]/g\n    const invalidMatches = text.match(invalidChars)\n    if (invalidMatches && invalidMatches.length > 0) {\n      confidence -= 0.4\n    }\n    \n    // ASCII範囲外の文字の妥当性\n    const nonAsciiRatio = (text.length - asciiOnlyText.length) / text.length\n    if (nonAsciiRatio > 0.1) {\n      confidence += 0.2\n    }\n    \n    return Math.max(0, Math.min(1, confidence))\n  }\n  \n  /**\n   * Shift-JISテキストの信頼度計算\n   */\n  private static calculateShiftJisConfidence(text: string, originalBytes: Uint8Array): number {\n    let confidence = 0.4 // ベース信頼度（UTF-8より低め）\n    \n    // 日本語文字の存在チェック\n    const japaneseChars = /[\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF]/g\n    const japaneseMatches = text.match(japaneseChars)\n    if (japaneseMatches && japaneseMatches.length > 0) {\n      confidence += 0.4\n    }\n    \n    // 制御文字や無効文字の存在チェック\n    const invalidChars = /[\\uFFFD]/g\n    const invalidMatches = text.match(invalidChars)\n    if (invalidMatches && invalidMatches.length > 0) {\n      confidence -= 0.3\n    }\n    \n    // Shift-JIS特有のバイトパターンチェック\n    confidence += this.checkShiftJisBytePatterns(originalBytes)\n    \n    return Math.max(0, Math.min(1, confidence))\n  }\n  \n  /**\n   * Shift-JIS特有のバイトパターンをチェック\n   */\n  private static checkShiftJisBytePatterns(bytes: Uint8Array): number {\n    let score = 0\n    const length = bytes.length\n    \n    for (let i = 0; i < length; i++) {\n      const byte = bytes[i]\n      \n      // Shift-JIS第1バイト範囲\n      if ((byte >= 0x81 && byte <= 0x9F) || (byte >= 0xE0 && byte <= 0xFC)) {\n        if (i + 1 < length) {\n          const nextByte = bytes[i + 1]\n          // Shift-JIS第2バイト範囲\n          if ((nextByte >= 0x40 && nextByte <= 0x7E) || (nextByte >= 0x80 && nextByte <= 0xFC)) {\n            score += 0.01\n            i++ // 次のバイトをスキップ\n          }\n        }\n      }\n    }\n    \n    return Math.min(0.3, score)\n  }\n  \n  /**\n   * バイナリファイルかどうかをチェック\n   */\n  static isBinaryFile(bytes: Uint8Array): boolean {\n    const sampleSize = Math.min(8000, bytes.length)\n    let nullBytes = 0\n    \n    for (let i = 0; i < sampleSize; i++) {\n      if (bytes[i] === 0) {\n        nullBytes++\n      }\n    }\n    \n    // NULL文字が多い場合はバイナリファイルと判定\n    return (nullBytes / sampleSize) > 0.01\n  }\n}","import React, { useState, useRef, useCallback } from 'react'\nimport type { DropZoneProps, DropZoneState } from './types'\nimport styles from './DropZone.module.css'\nimport { EncodingDetector } from '../../lib/encoding/EncodingDetector'\n\nconst DropZone: React.FC<DropZoneProps> = ({\n  onFileLoad,\n  onError,\n  maxFileSize = 10 * 1024 * 1024, // 10MB\n  acceptedFileTypes = ['text/plain', 'text/html'],\n  disabled = false,\n  className = ''\n}) => {\n  const [state, setState] = useState<DropZoneState>({\n    isDragOver: false,\n    isLoading: false,\n    loadingProgress: 0\n  })\n  \n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  // ファイル検証\n  const validateFile = useCallback((file: File): string | null => {\n    // ファイルサイズチェック\n    if (file.size > maxFileSize) {\n      return 'ファイルサイズが大きすぎます。10MB以下のファイルを選択してください。'\n    }\n    \n    // ファイル形式チェック\n    if (!acceptedFileTypes.includes(file.type) && !file.name.endsWith('.txt')) {\n      return '対応していないファイル形式です。テキストファイルを選択してください。'\n    }\n    \n    return null\n  }, [maxFileSize, acceptedFileTypes])\n\n  // ファイル読み込み処理\n  const processFile = useCallback(async (file: File) => {\n    const error = validateFile(file)\n    if (error) {\n      onError(error)\n      return\n    }\n\n    setState(prev => ({ ...prev, isLoading: true, loadingProgress: 0 }))\n    \n    try {\n      // バイナリファイルチェック\n      const arrayBuffer = await file.arrayBuffer()\n      const uint8Array = new Uint8Array(arrayBuffer)\n      \n      if (EncodingDetector.isBinaryFile(uint8Array)) {\n        setState(prev => ({ ...prev, isLoading: false, loadingProgress: 0 }))\n        onError('バイナリファイルは読み込めません。テキストファイルを選択してください。')\n        return\n      }\n\n      setState(prev => ({ ...prev, loadingProgress: 50 }))\n      \n      // エンコード自動検出\n      const detectionResult = await EncodingDetector.detectAndDecode(file)\n      \n      setState(prev => ({ ...prev, loadingProgress: 90 }))\n      \n      // 検出結果に応じた処理\n      if (!detectionResult.isValid) {\n        // 文字化けの警告を出しながらも表示は行う\n        const warningMessage = `文字エンコードの検出に失敗しました。${detectionResult.encoding}として読み込みましたが、文字化けしている可能性があります。`\n        console.warn(warningMessage)\n        // 警告はコンソールにのみ出力し、ファイルは読み込む\n      }\n      \n      setState(prev => ({ ...prev, isLoading: false, loadingProgress: 100 }))\n      \n      // メタデータと一緒にコンテンツを渡す\n      onFileLoad(detectionResult.text, file.name, {\n        encoding: detectionResult.encoding,\n        confidence: detectionResult.confidence,\n        hasBom: detectionResult.hasBom,\n        isValidEncoding: detectionResult.isValid\n      })\n      \n    } catch (error) {\n      setState(prev => ({ ...prev, isLoading: false, loadingProgress: 0 }))\n      onError('ファイルの読み込みに失敗しました。')\n      console.error('File processing error:', error)\n    }\n  }, [validateFile, onFileLoad, onError])\n\n  // ファイル選択処理\n  const handleFileSelect = useCallback((files: FileList | null) => {\n    if (!files || files.length === 0) return\n    \n    // 最初のファイルのみ処理\n    const file = files[0]\n    processFile(file)\n  }, [processFile])\n\n  // ドラッグ&ドロップハンドラー\n  const handleDragEnter = useCallback((e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (!disabled) {\n      setState(prev => ({ ...prev, isDragOver: true }))\n    }\n  }, [disabled])\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setState(prev => ({ ...prev, isDragOver: false }))\n  }, [])\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n  }, [])\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    \n    setState(prev => ({ ...prev, isDragOver: false }))\n    \n    if (disabled || state.isLoading) return\n    \n    const files = e.dataTransfer.files\n    handleFileSelect(files)\n  }, [disabled, state.isLoading, handleFileSelect])\n\n  // ボタンクリック・キーボード操作\n  const triggerFileSelect = useCallback(() => {\n    if (!disabled && !state.isLoading && fileInputRef.current) {\n      fileInputRef.current.click()\n    }\n  }, [disabled, state.isLoading])\n\n  // ボタン専用のクリックハンドラー（イベント伝播を停止）\n  const handleButtonClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    triggerFileSelect()\n  }, [triggerFileSelect])\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault()\n      triggerFileSelect()\n    }\n  }, [triggerFileSelect])\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    handleFileSelect(e.target.files)\n  }, [handleFileSelect])\n\n  const dropZoneClass = [\n    styles.dropZone,\n    state.isDragOver ? styles.dragOver : '',\n    disabled ? styles.disabled : '',\n    className\n  ].filter(Boolean).join(' ')\n\n  return (\n    <div\n      className={dropZoneClass}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n      onClick={triggerFileSelect}\n      onKeyDown={handleKeyDown}\n      role=\"button\"\n      tabIndex={disabled ? -1 : 0}\n      aria-label=\"ファイルドロップエリア\"\n      aria-disabled={disabled}\n    >\n      <div className={styles.message}>\n        📄 ファイルをドロップするか、ボタンをクリック\n      </div>\n      <div className={styles.subMessage}>\n        対応形式: .txt (10MB以下)\n      </div>\n      \n      <button\n        type=\"button\"\n        className={styles.fileButton}\n        onClick={handleButtonClick}\n        disabled={disabled || state.isLoading}\n      >\n        📁 ファイルを選択\n      </button>\n\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        className={styles.hiddenInput}\n        accept=\".txt,text/plain\"\n        onChange={handleInputChange}\n        disabled={disabled || state.isLoading}\n        aria-label=\"ファイル選択\"\n      />\n\n      {state.isLoading && (\n        <div className={styles.loadingOverlay}>\n          <div className={styles.loadingMessage}>\n            📖 読み込み中...\n          </div>\n          <div className={styles.progressBar} role=\"progressbar\" aria-valuenow={state.loadingProgress} aria-valuemin={0} aria-valuemax={100}>\n            <div \n              className={styles.progressFill}\n              style={{ width: `${state.loadingProgress}%` }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default DropZone","import React from 'react'\nimport type { RubyRendererProps } from './types'\nimport styles from './RubyRenderer.module.css'\n\nconst RubyRenderer: React.FC<RubyRendererProps> = ({ element, className = '' }) => {\n  const rubyClass = [styles.ruby, className].filter(Boolean).join(' ')\n  \n  return (\n    <ruby className={rubyClass} role=\"ruby\" data-ruby={element.ruby}>\n      <span>{element.text}</span>\n      <rt>{element.ruby}</rt>\n    </ruby>\n  )\n}\n\nexport default RubyRenderer","import React, { useCallback } from 'react'\nimport type { HeadingRendererProps } from './types'\nimport styles from './HeadingRenderer.module.css'\n\nconst HeadingRenderer: React.FC<HeadingRendererProps> = ({ \n  element, \n  onClick, \n  className = '' \n}) => {\n  const handleClick = useCallback(() => {\n    if (onClick) {\n      onClick(element)\n    }\n  }, [onClick, element])\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => {\n    if ((e.key === 'Enter' || e.key === ' ') && onClick) {\n      e.preventDefault()\n      onClick(element)\n    }\n  }, [onClick, element])\n\n  const headingClass = [\n    styles.heading,\n    styles[element.level],\n    onClick ? styles.clickable : '',\n    className\n  ].filter(Boolean).join(' ')\n\n  const commonProps = {\n    id: element.id,\n    className: headingClass,\n    'aria-label': element.text,\n    onClick: onClick ? handleClick : undefined,\n    onKeyDown: onClick ? handleKeyDown : undefined,\n    tabIndex: onClick ? 0 : undefined,\n    style: onClick ? { cursor: 'pointer' } : undefined\n  }\n\n  // Render appropriate heading level\n  switch (element.level) {\n    case 'large':\n      return <h1 {...commonProps}>{element.text}</h1>\n    case 'medium':\n      return <h2 {...commonProps}>{element.text}</h2>\n    case 'small':\n      return <h3 {...commonProps}>{element.text}</h3>\n    default:\n      return <h3 {...commonProps}>{element.text}</h3>\n  }\n}\n\nexport default HeadingRenderer","import React, { useState, useCallback } from 'react'\nimport type { ImageRendererProps } from './types'\nimport styles from './ImageRenderer.module.css'\n\nconst ImageRenderer: React.FC<ImageRendererProps> = ({ \n  element, \n  onLoad, \n  onError, \n  className = '',\n  lazy = false \n}) => {\n  const [loadingState, setLoadingState] = useState<'loading' | 'loaded' | 'error'>('loading')\n  const [, setErrorMessage] = useState<string>('')\n\n  const handleLoad = useCallback(() => {\n    setLoadingState('loaded')\n    const imageUrl = element.base64 || element.filename || ''\n    if (onLoad) {\n      onLoad(imageUrl, element)\n    }\n  }, [element, onLoad])\n\n  const handleError = useCallback((_event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    setLoadingState('error')\n    const imageUrl = element.base64 || element.filename || ''\n    const error = new Error(`Failed to load image: ${imageUrl}`)\n    setErrorMessage(error.message)\n    \n    if (onError) {\n      onError(imageUrl, element, error)\n    }\n  }, [element, onError])\n\n  const containerClass = [styles.imageContainer, className].filter(Boolean).join(' ')\n  const imageClass = [\n    styles.image,\n    styles.responsive,\n    loadingState === 'loaded' ? styles.loaded : ''\n  ].filter(Boolean).join(' ')\n\n  // Determine image source\n  const imageSrc = element.base64 || element.filename || ''\n  \n  if (!imageSrc) {\n    return (\n      <figure className={containerClass}>\n        <div className={styles.error}>\n          <span className={styles.errorIcon}>🖼️</span>\n          <div className={styles.errorMessage}>画像ソースが見つかりません</div>\n          <div className={styles.errorDetail}>{element.description}</div>\n        </div>\n      </figure>\n    )\n  }\n\n  if (loadingState === 'error') {\n    return (\n      <figure className={containerClass}>\n        <div className={styles.error}>\n          <span className={styles.errorIcon}>❌</span>\n          <div className={styles.errorMessage}>画像を読み込めませんでした</div>\n          <div className={styles.errorDetail}>{element.description}</div>\n        </div>\n      </figure>\n    )\n  }\n\n  return (\n    <figure className={containerClass}>\n      <img\n        src={imageSrc}\n        alt={element.description || ''}\n        className={imageClass}\n        width={element.width}\n        height={element.height}\n        loading={lazy ? 'lazy' : undefined}\n        onLoad={handleLoad}\n        onError={handleError}\n      />\n      {loadingState === 'loading' && (\n        <div className={styles.loading}>\n          📸 読み込み中...\n        </div>\n      )}\n    </figure>\n  )\n}\n\nexport default ImageRenderer","import React from 'react'\nimport type { CaptionRendererProps } from './types'\n\nconst CaptionRenderer: React.FC<CaptionRendererProps> = ({ element, className = '' }) => {\n  const captionClass = ['caption', className].filter(Boolean).join(' ')\n  \n  return (\n    <figcaption className={captionClass}>\n      {element.text}\n    </figcaption>\n  )\n}\n\nexport default CaptionRenderer","import React from 'react'\nimport type { PlainTextRendererProps } from './types'\n\nconst PlainTextRenderer: React.FC<PlainTextRendererProps> = ({ element, className = '' }) => {\n  // Handle line breaks and preserve whitespace\n  const content = element.content.split('\\n').map((line, index, array) => (\n    <React.Fragment key={index}>\n      {line}\n      {index < array.length - 1 && <br />}\n    </React.Fragment>\n  ))\n\n  return (\n    <span className={className} style={{ whiteSpace: 'pre-wrap' }}>\n      {content}\n    </span>\n  )\n}\n\nexport default PlainTextRenderer","import React from 'react'\nimport type { IndentedText } from '../../types'\nimport styles from './IndentedTextRenderer.module.css'\n\ninterface IndentedTextRendererProps {\n  element: IndentedText\n}\n\nexport function IndentedTextRenderer({ element }: IndentedTextRendererProps) {\n  const { content, indentCount } = element\n  \n  // Generate fullwidth spaces for positive indentation\n  const generateIndentSpaces = (count: number): string => {\n    return count > 0 ? '　'.repeat(count) : ''\n  }\n  \n  // Determine classes and styles\n  const classes = [styles['indented-text']]\n  const inlineStyles: React.CSSProperties = {}\n  \n  if (indentCount < 0) {\n    classes.push(styles['negative-indent'])\n    inlineStyles.marginLeft = `${indentCount}em`\n  }\n  \n  // Render with appropriate indentation\n  // For positive indent: add fullwidth spaces\n  // For negative indent: use CSS margin-left  \n  // For zero: just show content as-is\n  const displayContent = indentCount > 0 \n    ? generateIndentSpaces(indentCount) + content\n    : content\n  \n  return (\n    <span \n      className={classes.join(' ')}\n      style={inlineStyles}\n    >\n      {displayContent}\n    </span>\n  )\n}","import type { LeftIndentedText } from '../../types'\nimport styles from './LeftIndentedTextRenderer.module.css'\n\ninterface LeftIndentedTextRendererProps {\n  element: LeftIndentedText\n}\n\nexport function LeftIndentedTextRenderer({ element }: LeftIndentedTextRendererProps) {\n  const { content, indentCount } = element\n  \n  // Generate fullwidth spaces for left indentation\n  const generateIndentSpaces = (count: number): string => {\n    return Math.max(count, 0) > 0 ? '　'.repeat(Math.max(count, 0)) : ''\n  }\n  \n  // Add fullwidth spaces at the beginning of content\n  const displayContent = generateIndentSpaces(indentCount) + content\n  \n  return (\n    <span className={styles['left-indented-text']}>\n      {displayContent}\n    </span>\n  )\n}","import type { RightIndentedText } from '../../types'\nimport styles from './RightIndentedTextRenderer.module.css'\n\ninterface RightIndentedTextRendererProps {\n  element: RightIndentedText\n}\n\nexport function RightIndentedTextRenderer({ element }: RightIndentedTextRendererProps) {\n  const { content, indentCount } = element\n  \n  // For right-aligned text, we use CSS to push text to the right\n  // The indentCount represents spaces from the right edge\n  const rightMargin = Math.max(indentCount, 0)\n  \n  return (\n    <span \n      className={styles['right-indented-text']}\n      style={{\n        marginRight: `${rightMargin}em`,\n        display: 'block',\n        textAlign: 'right'\n      }}\n    >\n      {content}\n    </span>\n  )\n}","import React from 'react'\nimport type { IndentBlock } from '../../types'\nimport { ElementRenderer } from './ElementRenderer'\nimport styles from './IndentBlockRenderer.module.css'\n\ninterface IndentBlockRendererProps {\n  element: IndentBlock\n}\n\nexport function IndentBlockRenderer({ element }: IndentBlockRendererProps) {\n  const { elements, indentCount } = element\n  \n  // Clamp indentCount to non-negative values\n  const effectiveIndentCount = Math.max(0, indentCount)\n  \n  const inlineStyles: React.CSSProperties = {\n    marginLeft: `${effectiveIndentCount}em`\n  }\n  \n  return (\n    <div \n      className={styles['indent-block']}\n      style={inlineStyles}\n    >\n      {elements.map((childElement, index) => (\n        <ElementRenderer \n          key={index} \n          element={childElement} \n        />\n      ))}\n    </div>\n  )\n}","import React from 'react'\nimport type { ElementRendererProps } from './types'\nimport RubyRenderer from './RubyRenderer'\nimport HeadingRenderer from './HeadingRenderer'\nimport ImageRenderer from './ImageRenderer'\nimport CaptionRenderer from './CaptionRenderer'\nimport PlainTextRenderer from './PlainTextRenderer'\nimport { IndentedTextRenderer } from './IndentedTextRenderer'\nimport { LeftIndentedTextRenderer } from './LeftIndentedTextRenderer'\nimport { RightIndentedTextRenderer } from './RightIndentedTextRenderer'\nimport { IndentBlockRenderer } from './IndentBlockRenderer'\n\nconst ElementRenderer: React.FC<ElementRendererProps> = ({\n  element,\n  onImageLoad,\n  onImageError,\n  onHeadingClick,\n  className = ''\n}) => {\n  switch (element.type) {\n    case 'ruby':\n      return <RubyRenderer element={element} className={className} />\n    \n    case 'heading':\n      return (\n        <HeadingRenderer \n          element={element} \n          onClick={onHeadingClick}\n          className={className} \n        />\n      )\n    \n    case 'image':\n      return (\n        <ImageRenderer \n          element={element} \n          onLoad={onImageLoad}\n          onError={onImageError}\n          className={className}\n          lazy\n        />\n      )\n    \n    case 'caption':\n      return <CaptionRenderer element={element} className={className} />\n    \n    case 'text':\n      return <PlainTextRenderer element={element} className={className} />\n    \n    case 'indented-text':\n      return <IndentedTextRenderer element={element} />\n    \n    case 'left-indented-text':\n      return <LeftIndentedTextRenderer element={element} />\n    \n    case 'right-indented-text':\n      return <RightIndentedTextRenderer element={element} />\n    \n    case 'indent-block':\n      return <IndentBlockRenderer element={element} />\n    \n    default:\n      // Handle unknown element types\n      console.warn('Unknown element type:', (element as any).type)\n      return <span className={className}>{JSON.stringify(element)}</span>\n  }\n}\n\nexport default ElementRenderer\nexport { ElementRenderer }","import React, { useMemo } from 'react'\nimport type { DocumentRendererProps } from './types'\nimport ElementRenderer from './ElementRenderer'\nimport styles from './DocumentRenderer.module.css'\n\nconst DocumentRenderer: React.FC<DocumentRendererProps> = ({\n  document,\n  className = '',\n  onImageLoad,\n  onImageError,\n  onHeadingClick\n}) => {\n  // Check if document should use virtual scrolling\n  const shouldUseVirtualScroll = useMemo(() => {\n    return document && document.elements.length > 100\n  }, [document])\n\n  const containerClass = [\n    styles.documentRenderer,\n    shouldUseVirtualScroll ? styles.virtualScroll : '',\n    className\n  ].filter(Boolean).join(' ')\n\n  // Handle null document\n  if (!document) {\n    return (\n      <article className={containerClass} role=\"document\" aria-label=\"文書コンテンツ\">\n        <div className={styles.emptyState}>\n          <div className={styles.emptyIcon}>📄</div>\n          <div>文書が選択されていません</div>\n          <div>ファイルをドロップするか選択してください</div>\n        </div>\n      </article>\n    )\n  }\n\n  // Handle empty document\n  if (document.elements.length === 0) {\n    return (\n      <article className={containerClass} role=\"document\" aria-label=\"文書コンテンツ\">\n        <div className={styles.emptyState}>\n          <div className={styles.emptyIcon}>📝</div>\n          <div>文書に内容がありません</div>\n          <div>ファイルが空か、解析できませんでした</div>\n        </div>\n      </article>\n    )\n  }\n\n  return (\n    <article \n      className={containerClass}\n      role=\"document\"\n      aria-label=\"文書コンテンツ\"\n      tabIndex={0}\n    >\n      {document.elements.map((element, index) => {\n        // Use appropriate wrapper element based on element type\n        const isBlockElement = element.type === 'heading' || element.type === 'image' || element.type === 'caption'\n        const WrapperElement = isBlockElement ? 'div' : 'span'\n        const wrapperClass = isBlockElement ? styles.blockWrapper : styles.inlineWrapper\n        \n        return (\n          <WrapperElement key={`${element.type}-${index}`} className={wrapperClass}>\n            <ElementRenderer\n              element={element}\n              onImageLoad={onImageLoad}\n              onImageError={onImageError}\n              onHeadingClick={onHeadingClick}\n            />\n          </WrapperElement>\n        )\n      })}\n    </article>\n  )\n}\n\nexport default DocumentRenderer","import type { FormattingInstruction, Range } from '../../types'\n\ninterface ParseResult<T> {\n  element: T;\n  length: number;\n}\n\nexport class FormattingInstructionParser {\n  private maxIndentCount: number\n\n  constructor(maxIndentCount: number = 20) {\n    this.maxIndentCount = maxIndentCount\n  }\n\n  parseLeftIndent(text: string, startIndex: number): ParseResult<FormattingInstruction> | null {\n    // 左インデント指示: ［＃２字上げ］ (半角・全角数字両対応)\n    const pattern = /^［＃([０-９0-9]+)字上げ］/\n    const match = text.match(pattern)\n    \n    if (!match) {\n      return null\n    }\n\n    // 全角数字を半角に変換してパース\n    const numberStr = match[1].replace(/[０-９]/g, (char) => {\n      return String.fromCharCode(char.charCodeAt(0) - 0xFEE0)\n    })\n    const indentCount = parseInt(numberStr, 10)\n    \n    if (indentCount <= 0) {\n      return null\n    }\n\n    const instruction = match[0]\n    const range = this.createRange(startIndex, startIndex + instruction.length)\n\n    return {\n      element: {\n        type: 'formatting-instruction',\n        instruction,\n        instructionType: 'left-indent',\n        indentCount: indentCount,\n        range\n      },\n      length: instruction.length\n    }\n  }\n\n  parseRightIndent(text: string, startIndex: number): ParseResult<FormattingInstruction> | null {\n    // 右寄せ指示: ［＃地から２字上げ］ (半角・全角数字両対応)\n    const pattern = /^［＃地から([０-９0-9]+)字上げ］/\n    const match = text.match(pattern)\n    \n    if (!match) {\n      return null\n    }\n\n    // 全角数字を半角に変換してパース\n    const numberStr = match[1].replace(/[０-９]/g, (char) => {\n      return String.fromCharCode(char.charCodeAt(0) - 0xFEE0)\n    })\n    const indentCount = parseInt(numberStr, 10)\n    \n    if (indentCount <= 0) {\n      return null\n    }\n\n    const instruction = match[0]\n    const range = this.createRange(startIndex, startIndex + instruction.length)\n\n    return {\n      element: {\n        type: 'formatting-instruction',\n        instruction,\n        instructionType: 'right-indent',\n        indentCount: indentCount,\n        range\n      },\n      length: instruction.length\n    }\n  }\n\n  parseBlockIndentStart(text: string, startIndex: number): ParseResult<FormattingInstruction> | null {\n    // 字下げブロック開始: ［＃ここから１字下げ］ (半角・全角数字両対応)\n    const pattern = /^［＃ここから([０-９0-9]+)字下げ］/\n    const match = text.match(pattern)\n    \n    if (!match) {\n      return null\n    }\n\n    // 全角数字を半角に変換してパース\n    const numberStr = match[1].replace(/[０-９]/g, (char) => {\n      return String.fromCharCode(char.charCodeAt(0) - 0xFEE0)\n    })\n    const indentCount = parseInt(numberStr, 10)\n    \n    if (indentCount <= 0) {\n      return null\n    }\n\n    // 最大値制限\n    const clampedIndentCount = Math.min(indentCount, this.maxIndentCount)\n\n    const instruction = match[0]\n    const range = this.createRange(startIndex, startIndex + instruction.length)\n\n    return {\n      element: {\n        type: 'formatting-instruction',\n        instruction,\n        instructionType: 'indent-start',\n        indentCount: clampedIndentCount,\n        range\n      },\n      length: instruction.length\n    }\n  }\n\n  parseBlockIndentEnd(text: string, startIndex: number): ParseResult<FormattingInstruction> | null {\n    // 字下げブロック終了: ［＃ここで字下げ終わり］\n    const pattern = /^［＃ここで字下げ終わり］/\n    const match = text.match(pattern)\n    \n    if (!match) {\n      return null\n    }\n\n    const instruction = match[0]\n    const range = this.createRange(startIndex, startIndex + instruction.length)\n\n    return {\n      element: {\n        type: 'formatting-instruction',\n        instruction,\n        instructionType: 'indent-end',\n        indentCount: undefined,\n        range\n      },\n      length: instruction.length\n    }\n  }\n\n  preserveLeadingSpaces(line: string): string {\n    // 行頭の半角スペースを削除し、全角スペース（\\u3000）は保持\n    return line.replace(/^[ \\t]+/, '')\n  }\n\n  private createRange(start: number, end: number): Range {\n    return {\n      start: { line: 0, column: start, index: start },\n      end: { line: 0, column: end, index: end }\n    }\n  }\n}","import type { AozoraElement, IndentBlock, FormattingInstruction, Range } from '../../types'\n\ninterface IndentBlockStackItem {\n  indentCount: number\n  elements: Exclude<AozoraElement, FormattingInstruction>[]\n  startRange: Range\n}\n\nexport class IndentBlockProcessor {\n  \n  processIndentBlocks(elements: AozoraElement[]): AozoraElement[] {\n    const result: AozoraElement[] = []\n    const blockStack: IndentBlockStackItem[] = []\n    \n    for (const element of elements) {\n      if (element.type === 'formatting-instruction') {\n        if (element.instructionType === 'indent-start') {\n          // 新しいブロックを開始\n          const newBlock: IndentBlockStackItem = {\n            indentCount: element.indentCount || 1,\n            elements: [],\n            startRange: element.range\n          }\n          blockStack.push(newBlock)\n        } else if (element.instructionType === 'indent-end') {\n          // ブロックを終了\n          if (blockStack.length > 0) {\n            const completedBlock = blockStack.pop()!\n            const indentBlock: IndentBlock = {\n              type: 'indent-block',\n              indentCount: completedBlock.indentCount,\n              elements: completedBlock.elements,\n              range: {\n                start: completedBlock.startRange.start,\n                end: element.range.end\n              }\n            }\n            \n            // 完成したブロックを適切な場所に追加\n            if (blockStack.length > 0) {\n              // ネストした場合は親ブロックに追加\n              blockStack[blockStack.length - 1].elements.push(indentBlock)\n            } else {\n              // トップレベルの場合は結果に追加\n              result.push(indentBlock)\n            }\n          }\n          // 孤立した終了指示は無視\n        } else if (element.instructionType === 'left-indent' || element.instructionType === 'right-indent') {\n          // left-indent, right-indent 指示は他のフェーズで処理するため、そのまま通す\n          if (blockStack.length > 0) {\n            // ブロック内の場合は現在のブロックに追加\n            blockStack[blockStack.length - 1].elements.push(element as any)\n          } else {\n            // ブロック外の場合は結果に直接追加\n            result.push(element as any)\n          }\n        }\n        // その他の整形指示（indent-start, indent-end）は最終結果から除去されるので何もしない\n      } else {\n        // 通常の要素\n        if (blockStack.length > 0) {\n          // ブロック内の場合は現在のブロックに追加\n          blockStack[blockStack.length - 1].elements.push(element)\n        } else {\n          // ブロック外の場合は結果に直接追加\n          result.push(element)\n        }\n      }\n    }\n    \n    // 未閉じのブロックがあれば自動的に閉じる\n    while (blockStack.length > 0) {\n      const completedBlock = blockStack.pop()!\n      const indentBlock: IndentBlock = {\n        type: 'indent-block',\n        indentCount: completedBlock.indentCount,\n        elements: completedBlock.elements,\n        range: completedBlock.startRange // 終了範囲は不明なので開始範囲を使用\n      }\n      \n      if (blockStack.length > 0) {\n        // まだ親ブロックがある場合\n        blockStack[blockStack.length - 1].elements.push(indentBlock)\n      } else {\n        // 最上位レベルの場合\n        result.push(indentBlock)\n      }\n    }\n    \n    return result\n  }\n\n  removeFormattingInstructions(elements: AozoraElement[]): AozoraElement[] {\n    return elements.filter(element => element.type !== 'formatting-instruction')\n  }\n}","import type { \n  ParsedDocument, \n  AozoraElement, \n  RubyText, \n  Heading, \n  Image, \n  Caption, \n  PlainText,\n  LeftIndentedText,\n  RightIndentedText,\n  Range,\n  ParserConfig \n} from '../../types'\nimport { FormattingInstructionParser } from './FormattingInstructionParser'\nimport { IndentBlockProcessor } from './IndentBlockProcessor'\n\nexport default class AozoraParser {\n  private config: ParserConfig\n  private formattingParser: FormattingInstructionParser\n  private blockProcessor: IndentBlockProcessor\n\n  constructor(config?: Partial<ParserConfig>) {\n    this.config = {\n      enableRuby: true,\n      enableHeadings: true,\n      enableImages: true,\n      enableCaptions: true,\n      enableEmphasis: true,\n      enableTextFormatting: true,\n      preserveLeadingSpaces: true,\n      maxIndentCount: 20,\n      strictMode: false,\n      maxFileSize: 10 * 1024 * 1024, // 10MB\n      ...config\n    }\n    \n    // Initialize processors\n    this.formattingParser = new FormattingInstructionParser(this.config.maxIndentCount)\n    this.blockProcessor = new IndentBlockProcessor()\n  }\n\n  parse(text: string, filename: string, encodingInfo?: {\n    encoding: string\n    confidence?: number\n    hasBom?: boolean\n    isValidEncoding?: boolean\n  }): ParsedDocument {\n    const startTime = performance.now()\n    \n    if (text.length > this.config.maxFileSize) {\n      throw new Error(`File size exceeds maximum limit of ${this.config.maxFileSize} bytes`)\n    }\n\n    const elements: AozoraElement[] = []\n    const headings: Heading[] = []\n    const images: Image[] = []\n    \n    if (text.length === 0) {\n      return this.createDocument(elements, headings, images, filename, startTime, text, encodingInfo)\n    }\n\n    try {\n      const parsedElements = this.parseText(text)\n      \n      for (const element of parsedElements) {\n        elements.push(element)\n        \n        if (element.type === 'heading') {\n          headings.push(element)\n        } else if (element.type === 'image') {\n          images.push(element)\n        }\n      }\n\n      return this.createDocument(elements, headings, images, filename, startTime, text, encodingInfo)\n    } catch (error) {\n      // Partial parsing on error - return what we have\n      console.warn('Parser error, attempting partial parse:', error)\n      return this.createDocument(elements, headings, images, filename, startTime, text, encodingInfo)\n    }\n  }\n\n  private parseText(text: string): AozoraElement[] {\n    const elements: AozoraElement[] = []\n    \n    // Split text into lines for better processing\n    const lines = text.split(/\\r?\\n/)\n    let lineStart = 0\n    \n    for (const line of lines) {\n      // Preserve leading fullwidth spaces if enabled\n      const processedLine = this.config.preserveLeadingSpaces ? \n        this.formattingParser.preserveLeadingSpaces(line) : \n        line.trim()\n      \n      if (processedLine.length === 0) {\n        // Add empty line as text element\n        elements.push({\n          type: 'text',\n          content: '\\n',\n          range: this.createRange(lineStart, lineStart + 1)\n        })\n        lineStart += line.length + 1\n        continue\n      }\n      \n      let currentIndex = 0\n      \n      while (currentIndex < processedLine.length) {\n        const remaining = processedLine.slice(currentIndex)\n        let matched = false\n        \n        // Try to parse formatting instructions first if enabled\n        if (this.config.enableTextFormatting) {\n          // Try left indent instruction (［＃２字上げ］)\n          const leftIndentMatch = this.formattingParser.parseLeftIndent(remaining, lineStart + currentIndex)\n          if (leftIndentMatch) {\n            elements.push(leftIndentMatch.element)\n            currentIndex += leftIndentMatch.length\n            matched = true\n            continue\n          }\n          \n          // Try right indent instruction (［＃地から２字上げ］)\n          const rightIndentMatch = this.formattingParser.parseRightIndent(remaining, lineStart + currentIndex)\n          if (rightIndentMatch) {\n            elements.push(rightIndentMatch.element)\n            currentIndex += rightIndentMatch.length\n            matched = true\n            continue\n          }\n          \n          // Try block indent start\n          const blockStartMatch = this.formattingParser.parseBlockIndentStart(remaining, lineStart + currentIndex)\n          if (blockStartMatch) {\n            elements.push(blockStartMatch.element)\n            currentIndex += blockStartMatch.length\n            matched = true\n            continue\n          }\n          \n          // Try block indent end\n          const blockEndMatch = this.formattingParser.parseBlockIndentEnd(remaining, lineStart + currentIndex)\n          if (blockEndMatch) {\n            elements.push(blockEndMatch.element)\n            currentIndex += blockEndMatch.length\n            matched = true\n            continue\n          }\n        }\n        \n        // Try to parse different notations in priority order\n        const rubyMatch = this.parseRuby(remaining, lineStart + currentIndex)\n        if (rubyMatch) {\n          elements.push(rubyMatch.element)\n          currentIndex += rubyMatch.length\n          matched = true\n          continue\n        }\n\n        const headingMatch = this.parseHeading(remaining, lineStart + currentIndex)\n        if (headingMatch) {\n          elements.push(headingMatch.element)\n          currentIndex += headingMatch.length\n          matched = true\n          continue\n        }\n\n        const imageMatch = this.parseImage(remaining, lineStart + currentIndex)\n        if (imageMatch) {\n          elements.push(imageMatch.element)\n          currentIndex += imageMatch.length\n          matched = true\n          continue\n        }\n\n        const captionMatch = this.parseCaption(remaining, lineStart + currentIndex)\n        if (captionMatch) {\n          elements.push(captionMatch.element)\n          currentIndex += captionMatch.length\n          matched = true\n          continue\n        }\n\n        // If no special notation found, parse as plain text until next special character\n        if (!matched) {\n          const plainTextMatch = this.parsePlainText(remaining, lineStart + currentIndex)\n          if (plainTextMatch) {\n            // Add all text elements, even empty ones temporarily - we'll clean up later\n            elements.push(plainTextMatch.element)\n            currentIndex += plainTextMatch.length\n          } else {\n            // Safety: advance by one character if nothing matches\n            currentIndex++\n          }\n        }\n      }\n      \n      // Add line break\n      elements.push({\n        type: 'text',\n        content: '\\n',\n        range: this.createRange(lineStart + line.length, lineStart + line.length + 1)\n      })\n      \n      lineStart += line.length + 1\n    }\n\n    // Process indent blocks if text formatting is enabled\n    let processedElements = elements\n    if (this.config.enableTextFormatting) {\n      // First process indent blocks (this also removes formatting instructions)\n      processedElements = this.blockProcessor.processIndentBlocks(elements)\n      \n      // Handle left and right indent instructions separately\n      processedElements = this.processIndentInstructions(processedElements)\n    }\n\n    // Filter out consecutive empty text elements and merge adjacent text elements\n    return this.cleanupElements(processedElements)\n  }\n\n  private processIndentInstructions(elements: AozoraElement[]): AozoraElement[] {\n    const result: AozoraElement[] = []\n    \n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i]\n      \n      if (element.type === 'formatting-instruction' && \n          (element.instructionType === 'left-indent' || element.instructionType === 'right-indent')) {\n        // インデント指示の場合、次の要素と結合する\n        const nextElement = elements[i + 1]\n        if (nextElement && nextElement.type === 'text') {\n          if (element.instructionType === 'left-indent') {\n            // 左インデント\n            const leftIndentedText: LeftIndentedText = {\n              type: 'left-indented-text',\n              content: nextElement.content,\n              indentCount: element.indentCount || 0,\n              range: {\n                start: element.range.start,\n                end: nextElement.range.end\n              }\n            }\n            result.push(leftIndentedText)\n          } else {\n            // 右寄せ\n            const rightIndentedText: RightIndentedText = {\n              type: 'right-indented-text',\n              content: nextElement.content,\n              indentCount: element.indentCount || 0,\n              range: {\n                start: element.range.start,\n                end: nextElement.range.end\n              }\n            }\n            result.push(rightIndentedText)\n          }\n          i++ // 次の要素もスキップ\n        }\n        // 次の要素がない、またはテキストでない場合は指示を無視\n      } else {\n        result.push(element)\n      }\n    }\n    \n    return result\n  }\n\n  private parseRuby(text: string, startIndex: number): { element: RubyText; length: number } | null {\n    if (!this.config.enableRuby) return null\n\n    // Pattern: ｜text《ruby》 or text《ruby》\n    const rangePattern = /^｜([^《]+)《([^》]+)》/\n    const basicPattern = /^([^｜［《\\s]+)《([^》]+)》/\n\n    const rangeMatch = text.match(rangePattern)\n    if (rangeMatch) {\n      const [fullMatch, baseText, ruby] = rangeMatch\n      return {\n        element: {\n          type: 'ruby',\n          text: baseText,\n          ruby: ruby,\n          range: this.createRange(startIndex, startIndex + fullMatch.length)\n        },\n        length: fullMatch.length\n      }\n    }\n\n    const basicMatch = text.match(basicPattern)\n    if (basicMatch) {\n      const [fullMatch, baseText, ruby] = basicMatch\n      return {\n        element: {\n          type: 'ruby',\n          text: baseText,\n          ruby: ruby,\n          range: this.createRange(startIndex, startIndex + fullMatch.length)\n        },\n        length: fullMatch.length\n      }\n    }\n\n    return null\n  }\n\n  private parseHeading(text: string, startIndex: number): { element: Heading; length: number } | null {\n    if (!this.config.enableHeadings) return null\n\n    // Pattern: text［＃「text」は大/中/小見出し］\n    const pattern = /^(.+?)［＃「(.+?)」は(大|中|小)見出し］/\n    const match = text.match(pattern)\n\n    if (match) {\n      const [fullMatch, , innerText, levelText] = match\n      const level = levelText === '大' ? 'large' : levelText === '中' ? 'medium' : 'small'\n      const id = this.generateHeadingId(innerText)\n\n      return {\n        element: {\n          type: 'heading',\n          level,\n          text: innerText,\n          id,\n          range: this.createRange(startIndex, startIndex + fullMatch.length)\n        },\n        length: fullMatch.length\n      }\n    }\n\n    return null\n  }\n\n  private parseImage(text: string, startIndex: number): { element: Image; length: number } | null {\n    if (!this.config.enableImages) return null\n\n    // Pattern: ［＃description（filename、横width×縦height）入る］ or ［＃description（filename）入る］\n    const withSizePattern = /^［＃([^（]+)（([^、]+)、横(\\d+)×縦(\\d+)）入る］/\n    const basicPattern = /^［＃([^（]+)（([^）]+)）入る］/\n\n    const withSizeMatch = text.match(withSizePattern)\n    if (withSizeMatch) {\n      const [fullMatch, description, filename, width, height] = withSizeMatch\n      return {\n        element: {\n          type: 'image',\n          description: description.trim(),\n          filename: filename.trim(),\n          width: parseInt(width),\n          height: parseInt(height),\n          range: this.createRange(startIndex, startIndex + fullMatch.length)\n        },\n        length: fullMatch.length\n      }\n    }\n\n    const basicMatch = text.match(basicPattern)\n    if (basicMatch) {\n      const [fullMatch, description, filename] = basicMatch\n      return {\n        element: {\n          type: 'image',\n          description: description.trim(),\n          filename: filename.trim(),\n          range: this.createRange(startIndex, startIndex + fullMatch.length)\n        },\n        length: fullMatch.length\n      }\n    }\n\n    return null\n  }\n\n  private parseCaption(text: string, startIndex: number): { element: Caption; length: number } | null {\n    if (!this.config.enableCaptions) return null\n\n    // Pattern: text［＃「text」はキャプション］\n    const pattern = /^(.+?)［＃「(.+?)」はキャプション］/\n    const match = text.match(pattern)\n\n    if (match) {\n      const [fullMatch, , innerText] = match\n      return {\n        element: {\n          type: 'caption',\n          text: innerText,\n          range: this.createRange(startIndex, startIndex + fullMatch.length)\n        },\n        length: fullMatch.length\n      }\n    }\n\n    return null\n  }\n\n  private parsePlainText(text: string, startIndex: number): { element: PlainText; length: number } | null {\n    // Find the next special character or pattern\n    const specialChars = /[｜［《》]/\n    const match = text.search(specialChars)\n    \n    const endIndex = match === -1 ? text.length : Math.max(match, 1)\n    if (endIndex === 0) return null\n\n    const content = text.slice(0, endIndex)\n    \n    // Always return content, even if it's just whitespace\n    return {\n      element: {\n        type: 'text',\n        content,\n        range: this.createRange(startIndex, startIndex + endIndex)\n      },\n      length: endIndex\n    }\n  }\n\n  private generateHeadingId(text: string): string {\n    // Generate a unique ID for headings\n    return text\n      .replace(/[^\\w\\s-]/g, '') // Remove special characters\n      .trim()\n      .replace(/\\s+/g, '-') // Replace spaces with hyphens\n      .toLowerCase() + \n      '-' + Date.now().toString(36) // Add timestamp for uniqueness\n  }\n\n  private createRange(start: number, end: number): Range {\n    // Simple range creation - could be enhanced with line/column calculation\n    return {\n      start: { line: 0, column: start, index: start },\n      end: { line: 0, column: end, index: end }\n    }\n  }\n\n  private cleanupElements(elements: AozoraElement[]): AozoraElement[] {\n    const cleaned: AozoraElement[] = []\n    \n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i]\n      \n      // Skip empty text elements except for meaningful whitespace\n      if (element.type === 'text' && element.content.trim().length === 0 && element.content !== '\\n') {\n        continue\n      }\n      \n      // Merge adjacent text elements\n      if (element.type === 'text' && cleaned.length > 0) {\n        const lastElement = cleaned[cleaned.length - 1]\n        if (lastElement.type === 'text') {\n          lastElement.content += element.content\n          lastElement.range.end = element.range.end\n          continue\n        }\n      }\n      \n      cleaned.push(element)\n    }\n    \n    return cleaned\n  }\n\n  private createDocument(\n    elements: AozoraElement[], \n    headings: Heading[], \n    images: Image[], \n    filename: string, \n    startTime: number,\n    originalText: string,\n    encodingInfo?: {\n      encoding: string\n      confidence?: number\n      hasBom?: boolean\n      isValidEncoding?: boolean\n    }\n  ): ParsedDocument {\n    const endTime = performance.now()\n    \n    // Extract title from first large heading\n    const title = headings.find(h => h.level === 'large')?.text\n\n    return {\n      title,\n      elements,\n      headings,\n      images,\n      metadata: {\n        filename,\n        fileSize: originalText.length,\n        encoding: encodingInfo?.encoding || 'UTF-8',\n        encodingConfidence: encodingInfo?.confidence,\n        hasBom: encodingInfo?.hasBom,\n        isValidEncoding: encodingInfo?.isValidEncoding,\n        parseTime: endTime - startTime,\n        elementCount: elements.length,\n        characterCount: originalText.length\n      }\n    }\n  }\n}","import { useState } from 'react'\nimport Layout from './components/Layout/Layout'\nimport DropZone from './components/DropZone/DropZone'\nimport DocumentRenderer from './components/DocumentRenderer/DocumentRenderer'\nimport AozoraParser from './lib/parser/AozoraParser'\nimport type { ParsedDocument } from './types'\nimport './App.css'\n\nfunction App() {\n  const [document, setDocument] = useState<ParsedDocument | null>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleFileLoad = (content: string, filename: string) => {\n    try {\n      setError(null)\n      const parser = new AozoraParser()\n      const parsedDocument = parser.parse(content, filename)\n      \n      setDocument(parsedDocument)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'ファイルの解析に失敗しました')\n      setDocument(null)\n    }\n  }\n\n  const handleError = (message: string) => {\n    setError(message)\n    setDocument(null)\n  }\n\n  const handleNewDocument = () => {\n    setDocument(null)\n    setError(null)\n  }\n\n  return (\n    <Layout>\n      <div className=\"app-content\">\n        {document ? (\n          <div className=\"document-view\">\n            <div className=\"document-header\">\n              <button \n                className=\"new-document-button\"\n                onClick={handleNewDocument}\n                type=\"button\"\n              >\n                📄 新しいドキュメント\n              </button>\n              <h1>{document.title}</h1>\n            </div>\n            <DocumentRenderer document={document} />\n          </div>\n        ) : (\n          <div className=\"welcome-section\">\n            <h2>ファイルをドロップして開始</h2>\n            <DropZone \n              onFileLoad={handleFileLoad}\n              onError={handleError}\n              maxFileSize={50 * 1024 * 1024} // 50MB\n              acceptedFileTypes={['text/plain', 'text/html']}\n            />\n            {error && (\n              <div className=\"error-message\" role=\"alert\">\n                ❌ {error}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","useResizablePanel","initialWidth","minWidth","maxWidth","onWidthChange","width","setWidth","useState","isResizing","setIsResizing","startXRef","useRef","startWidthRef","handleMouseMove","useCallback","deltaX","newWidth","handleMouseUp","useEffect","handleMouseDown","SIDEBAR_CONSTANTS","Sidebar","side","isOpen","onToggle","children","ariaLabel","canResize","resizablePanel","sidebarClass","styles","defaultAriaLabel","currentWidth","sidebarStyle","jsxs","jsx","__spreadValues","DEFAULT_SETTINGS","SETTING_CONSTRAINTS","STORAGE_KEYS","clampValue","value","min","max","loadSettingsFromStorage","settings","key","storageKey","stored","parsedValue","constraints","error","updateCSSVariables","root","createDebouncedStorage","timeouts","debouncedStorage","saveSettingToStorage","useDocumentSettings","setSettings","updateSetting","clampedValue","prev","newSettings","__spreadProps","resetSetting","defaultValue","resetToDefaults","SettingSlider","label","step","unit","onChange","onReset","handleSliderChange","newValue","handleKeyDown","formattedValue","sliderId","labelId","valueId","SettingsPanel","handleFontSizeChange","handleLineHeightChange","handleHorizontalMarginChange","handleLetterSpacingChange","handleParagraphSpacingChange","handleFontSizeReset","handleLineHeightReset","handleHorizontalMarginReset","handleLetterSpacingReset","handleParagraphSpacingReset","DEFAULT_STATE","useSidebarState","sidebarState","setSidebarState","leftOpen","rightOpen","leftWidth","rightWidth","toggleSidebar","newState","setSidebarWidth","clampedWidth","Layout","isDesktop","setIsDesktop","checkScreenSize","leftMargin","rightMargin","mainContentStyle","EncodingDetector","file","arrayBuffer","uint8Array","hasBom","utf8Result","sjisResult","bytes","dataBytes","text","confidence","_originalBytes","asciiOnlyText","japaneseChars","japaneseMatches","invalidChars","invalidMatches","originalBytes","score","length","i","byte","nextByte","sampleSize","nullBytes","DropZone","onFileLoad","onError","maxFileSize","acceptedFileTypes","disabled","className","state","setState","fileInputRef","validateFile","processFile","detectionResult","warningMessage","handleFileSelect","files","handleDragEnter","handleDragLeave","handleDragOver","handleDrop","triggerFileSelect","handleButtonClick","handleInputChange","dropZoneClass","RubyRenderer","element","rubyClass","HeadingRenderer","onClick","handleClick","headingClass","commonProps","ImageRenderer","onLoad","lazy","loadingState","setLoadingState","setErrorMessage","handleLoad","imageUrl","handleError","_event","containerClass","imageClass","imageSrc","CaptionRenderer","captionClass","PlainTextRenderer","content","line","index","array","React","IndentedTextRenderer","indentCount","generateIndentSpaces","count","classes","inlineStyles","displayContent","LeftIndentedTextRenderer","RightIndentedTextRenderer","IndentBlockRenderer","elements","effectiveIndentCount","childElement","ElementRenderer","onImageLoad","onImageError","onHeadingClick","DocumentRenderer","document","shouldUseVirtualScroll","useMemo","isBlockElement","WrapperElement","wrapperClass","FormattingInstructionParser","maxIndentCount","__publicField","startIndex","pattern","match","numberStr","char","instruction","range","clampedIndentCount","start","end","IndentBlockProcessor","result","blockStack","newBlock","completedBlock","indentBlock","AozoraParser","config","filename","encodingInfo","startTime","headings","images","parsedElements","lines","lineStart","processedLine","currentIndex","remaining","matched","leftIndentMatch","rightIndentMatch","blockStartMatch","blockEndMatch","rubyMatch","headingMatch","imageMatch","captionMatch","plainTextMatch","processedElements","nextElement","leftIndentedText","rightIndentedText","rangePattern","basicPattern","rangeMatch","fullMatch","baseText","ruby","basicMatch","innerText","levelText","level","id","withSizePattern","withSizeMatch","description","height","specialChars","endIndex","cleaned","lastElement","originalText","_a","endTime","App","setDocument","setError","handleFileLoad","parsedDocument","err","message","handleNewDocument","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,1,2]}